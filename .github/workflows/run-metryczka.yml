name: Run Metryczka (krok po kroku)

on:
  workflow_dispatch:
    inputs:
      pdf_path:
        description: "Ścieżka do PDF w repo (np. Braterstwo-...pdf albo folder/plik.pdf)"
        required: true
        type: string
      q1:  { description: "Odpowiedź 1",  required: false, type: string }
      q2:  { description: "Odpowiedź 2",  required: false, type: string }
      q3:  { description: "Odpowiedź 3",  required: false, type: string }
      q4:  { description: "Odpowiedź 4",  required: false, type: string }
      q5:  { description: "Odpowiedź 5",  required: false, type: string }
      q6:  { description: "Odpowiedź 6",  required: false, type: string }
      q7:  { description: "Odpowiedź 7",  required: false, type: string }
      q8:  { description: "Odpowiedź 8",  required: false, type: string }
      q9:
        description: "Odpowiedź 9 **i kolejne** (może mieć wiele linii; każda linia = następna odpowiedź)"
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          python -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate PDF path
        shell: bash
        run: |
          set -e
          test -f "${{ inputs.pdf_path }}" || { echo "Nie ma pliku: ${{ inputs.pdf_path }}"; exit 1; }
          echo "PDF_PATH=${{ inputs.pdf_path }}" >> $GITHUB_ENV

            - name: Build answers stream
        shell: bash
        run: |
          set -e
          # q9 może być listą odpowiedzi rozdzielonych | ; , albo zawierać sekwencje \n
          q9_raw="${{ inputs.q9 }}"
          q9="$q9_raw"
          # zamień dosłowne "\n" na prawdziwe nowe linie
          q9="${q9//\\n/$'\n'}"
          # obsłuż separatory | ; ,
          q9="${q9//|/$'\n'}"
          q9="${q9//;/$'\n'}"
          q9="${q9//,/$'\n'}"

          {
            printf "%s\n" "${{ inputs.q1 }}"
            printf "%s\n" "${{ inputs.q2 }}"
            printf "%s\n" "${{ inputs.q3 }}"
            printf "%s\n" "${{ inputs.q4 }}"
            printf "%s\n" "${{ inputs.q5 }}"
            printf "%s\n" "${{ inputs.q6 }}"
            printf "%s\n" "${{ inputs.q7 }}"
            printf "%s\n" "${{ inputs.q8 }}"
            printf "%s\n" "$q9"
            # bezpieczeństwo: dolej 12 pustych linii, gdyby CLI zapytało o coś jeszcze
            for i in {1..12}; do printf "\n"; done
          } > answers.txt

          echo "=== Answers preview (pierwsze 40 linii) ==="
          nl -ba answers.txt | sed -n '1,40p'

      - name: Run metryczka (CLI)
        shell: bash
        run: |
          set -e
          . venv/bin/activate
          python metryczka_cli.py --pdf "$PDF_PATH" < answers.txt

      - name: Collect outputs
        shell: bash
        run: |
          set -e
          mkdir -p out
          shopt -s globstar nullglob
          for f in **/*.pdf; do
            [[ "$f" == "$PDF_PATH" ]] && continue
            cp "$f" "out/$(basename "$f")"
          done
          ls -la out || true

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: metryczka-output
          path: out/*
          if-no-files-found: warn
